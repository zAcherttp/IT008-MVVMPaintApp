<Window x:Class="MVVMPaintApp.Views.DashboardWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:MVVMPaintApp.ViewModels"
        xmlns:conv="clr-namespace:MVVMPaintApp.Converters"
        xmlns:local="clr-namespace:MVVMPaintApp.Views"
        WindowStartupLocation="CenterScreen"
        mc:Ignorable="d"
        Title="Home" Height="600" Width="900" Background="{DynamicResource ControlFillColorSecondaryBrush}" ResizeMode="NoResize">
    <Window.Resources>
        <conv:BrushConverter x:Key="BrushConverter"/>
        <Style x:Key="NewFileButtonStyle" TargetType="Button">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
            <Setter Property="Background" Value="{DynamicResource AccentButtonBackground}" />
            <Setter Property="Foreground" Value="{DynamicResource AccentButtonForeground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource AccentControlElevationBorderBrush}" />
            <Setter Property="BorderThickness" Value="{StaticResource ButtonBorderThemeThickness}" />
            <Setter Property="Padding" Value="30,9,30,11" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="Border.CornerRadius" Value="24" />
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="ContentBorder" Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}" MinWidth="{TemplateBinding FrameworkElement.MinWidth}" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" Padding="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}" VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <ContentPresenter Name="ContentPresenter" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" TextElement.Foreground="{TemplateBinding Control.Foreground}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="ContentBorder" Value="#31A8E8" Property="Border.Background" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ContentBorder" Value="#47B7F3" Property="Border.Background" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ContentBorder" Value="{DynamicResource ButtonBackgroundDisabled}" Property="Border.Background" />
                                <Setter TargetName="ContentBorder" Value="{DynamicResource ButtonBorderBrushDisabled}" Property="Border.BorderBrush" />
                                <Setter TargetName="ContentPresenter" Value="{DynamicResource ButtonForegroundDisabled}" Property="TextElement.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OpenButtonStyle" TargetType="Button">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource AccentButtonForeground}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="{StaticResource ButtonBorderThemeThickness}" />
            <Setter Property="Padding" Value="30,9,30,11" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="Border.CornerRadius" Value="24" />
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="ContentBorder" Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}" MinWidth="{TemplateBinding FrameworkElement.MinWidth}" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" Padding="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}" VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <ContentPresenter Name="ContentPresenter" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" TextElement.Foreground="{TemplateBinding Control.Foreground}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter TargetName="ContentBorder" Value="{DynamicResource SubtleFillColorSecondaryBrush}" Property="Border.Background" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ContentBorder" Value="{DynamicResource SubtleFillColorTertiaryBrush}" Property="Border.Background" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ContentBorder" Value="{DynamicResource ButtonBackgroundDisabled}" Property="Border.Background" />
                                <Setter TargetName="ContentBorder" Value="{DynamicResource ButtonBorderBrushDisabled}" Property="Border.BorderBrush" />
                                <Setter TargetName="ContentPresenter" Value="{DynamicResource ButtonForegroundDisabled}" Property="TextElement.Foreground" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="EmptyListViewStyle" TargetType="{x:Type ListView}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RecentProjects.Count}" Value="0">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListView}">
                                <Grid>
                                    <TextBlock Text="Nothing here, create one!"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource TextFillColorTertiaryBrush}"
                                       Margin="0,0,0,30"
                                       FontSize="20"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="310" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Border Grid.Column="1" BorderBrush="{DynamicResource ControlElevationBorderBrush}" BorderThickness="2" CornerRadius="20,0,0,0" Background="{DynamicResource ControlFillColorDefaultBrush}" HorizontalAlignment="Left" Width="600" Height="525" VerticalAlignment="Bottom">
            <StackPanel>
                <Label Foreground="{DynamicResource TextFillColorPrimaryBrush}" Content="Recent" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="36" Margin="40,15,0,15"/>
                <ListView
                        SelectionChanged="ListView_SelectionChanged"
                        ItemsSource="{Binding RecentProjects}"
                        SelectedItem="{Binding SelectedProject, Mode=TwoWay}"
                        Background="Transparent"
                        Style="{StaticResource EmptyListViewStyle}"  
                        BorderThickness="0"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        VirtualizingPanel.ScrollUnit="Pixel"
                        ScrollViewer.CanContentScroll="True"
                        IsSynchronizedWithCurrentItem="False" 
                        Margin="25,0,25,20" Height="443" MouseDoubleClick="ListView_MouseDoubleClick">

                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Width="{Binding ThumbnailWidth}" 
                                Margin="0,20,10,20" 
                                Cursor="Hand">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Border Background="Transparent"
                                    CornerRadius="8"
                                    BorderThickness="2"
                                    BorderBrush="{DynamicResource ControlStrokeColorDefaultBrush}"
                                        ClipToBounds="True">
                                    <Canvas x:Name="ThumbnailCanvas" 
                                    Height="{Binding ThumbnailHeight}" Width="{Binding ThumbnailWidth}" ClipToBounds="True">
                                        <Image Source="{Binding ThumbnailPath}" ClipToBounds="True"
                                        Stretch="UniformToFill"/>
                                    </Canvas>
                                </Border>

                                <TextBlock Grid.Row="1"
                                    Text="{Binding Name}"
                                    FontSize="18"
                                    Foreground="{DynamicResource TextFillColorTertiaryBrush}"
                                    Margin="0,4,0,0"
                                    TextTrimming="CharacterEllipsis"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>
        </Border>
        <StackPanel Grid.Column="0">
            <Image Source="pack://application:,,,/Resources/MyPaintAppIcon.png" Width="80" Height="80" HorizontalAlignment="left" Margin="80,40,0,40"/>
            <Button Style="{StaticResource NewFileButtonStyle}" Command="{Binding OpenNewFileWindowCommand}"  Content="New File" VerticalAlignment="Top" Background="#1A99DD" Foreground="White" FontSize="21" FontFamily="Segoe UI" Margin="40,0,40,10"/>
            <Button Style="{StaticResource OpenButtonStyle}" Command="{Binding OpenProjectCommand}"
                    Content="Open" VerticalAlignment="Top" FontSize="21" FontFamily="Segoe UI" Margin="40,0,40,10"
                    Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
        </StackPanel>
    </Grid>
</Window>
